diff -Nraub MPlayer-1.0rc1.ori/libavcodec/mpegvideo.c MPlayer-1.0rc1/libavcodec/mpegvideo.c
--- MPlayer-1.0rc1.ori/libavcodec/mpegvideo.c	2006-10-22 18:32:34.000000000 -0400
+++ MPlayer-1.0rc1/libavcodec/mpegvideo.c	2006-11-03 12:21:47.000000000 -0400
@@ -1322,7 +1322,7 @@
     if(s->modified_quant)
         s->chroma_qscale_table= ff_h263_chroma_qscale_table;
     s->progressive_frame=
-    s->progressive_sequence= !(avctx->flags & (CODEC_FLAG_INTERLACED_DCT|CODEC_FLAG_INTERLACED_ME));
+    s->progressive_sequence= !(avctx->flags & (CODEC_FLAG_INTERLACED_DCT|CODEC_FLAG_INTERLACED_ME|CODEC_FLAG_ALT_SCAN));
     s->quant_precision=5;
 
     ff_set_cmp(&s->dsp, s->dsp.ildct_cmp, s->avctx->ildct_cmp);
@@ -2535,13 +2535,17 @@
             RateControlContext *rcc= &s->rc_context;
             int max_size= rcc->buffer_index/3;
 
-            if(put_bits_count(&s->pb) > max_size && s->qscale < s->avctx->qmax){
+            if(put_bits_count(&s->pb) > max_size && s->lambda < s->avctx->lmax){
                 s->next_lambda= FFMAX(s->lambda+1, s->lambda*(s->qscale+1) / s->qscale);
                 s->mb_skipped = 0;        //done in MPV_frame_start()
                 if(s->pict_type==P_TYPE){ //done in encode_picture() so we must undo it
                     if(s->flipflop_rounding || s->codec_id == CODEC_ID_H263P || s->codec_id == CODEC_ID_MPEG4)
                         s->no_rounding ^= 1;
                 }
+                if(s->pict_type!=B_TYPE){
+                    s->time_base= s->last_time_base;
+                    s->last_non_b_time= s->time - s->pp_time;
+                }
 //                av_log(NULL, AV_LOG_ERROR, "R:%d ", s->next_lambda);
                 for(i=0; i<avctx->thread_count; i++){
                     PutBitContext *pb= &s->thread_context[i]->pb;
@@ -5579,7 +5583,7 @@
     /* Estimate motion for every MB */
     if(s->pict_type != I_TYPE){
         s->lambda = (s->lambda * s->avctx->me_penalty_compensation + 128)>>8;
-        s->lambda2= (s->lambda2* s->avctx->me_penalty_compensation + 128)>>8;
+        s->lambda2= (s->lambda2* (int64_t)s->avctx->me_penalty_compensation + 128)>>8;
         if(s->pict_type != B_TYPE && s->avctx->me_threshold==0){
             if((s->avctx->pre_me && s->last_non_b_pict_type==I_TYPE) || s->avctx->pre_me==2){
                 s->avctx->execute(s->avctx, pre_estimate_motion_thread, (void**)&(s->thread_context[0]), NULL, s->avctx->thread_count);
